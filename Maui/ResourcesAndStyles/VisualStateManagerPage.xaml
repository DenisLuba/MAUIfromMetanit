<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MetanitLessons.Maui.ResourcesAndStyles.VisualStateManagerPage"
             Title="VisualStateManagerPage">


<!--Удобнее хранить визуальные состояния отдельно в ресурсах, например так: -->
    <!--<ContentPage.Resources>
        <Style TargetType="Entry">
            <Setter Property="Margin" Value="12" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CustomStatesResource">

                        <VisualState x:Name="Focused">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="#F04040" />
                                <Setter Property="BackgroundColor" Value="#02DFDB" />
                            </VisualState.Setters>
                        </VisualState>

                        <VisualState x:Name="PointerOver">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="#F04040" />
                                <Setter Property="FontAttributes" Value="Bold" />
                                <Setter Property="FontSize" Value="32" />
                            </VisualState.Setters>
                        </VisualState>

                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentPage.Resources>-->

    <VerticalStackLayout>
        
        <Entry Text="Hello, World!" />

        <Entry x:Name="myEntry" Text="Hello METANIT.COM!" TextChanged="EntryTextChanged">
            <!--Визуальные состояния определяются с помощью прикрепляемого свойства 
    VisualStateManager.VisualStateGroups. Оно имеет тип VisualStateGroupList 
    и представляет коллекцию объектов VisualStateGroup, 
    то есть группу визуальных состояний.-->
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CustomStates">

                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
<!--C помощью Setter устанавливаются значения свойств визуального элемента, 
    когда он принимает данное состояние. Например, когда поле Entry 
    находится в состоянии "Focused" (то есть получило фокус), срабатывает 
    следующее состояние-->
                            <Setter Property="TextColor" Value="#AFFD40" />
                            <Setter Property="BackgroundColor" Value="Green" />
                        </VisualState.Setters>
                    </VisualState>

                    <!--<VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="#004D40" />
                            <Setter Property="FontAttributes" Value="Bold" />
                        </VisualState.Setters>
                    </VisualState>-->
                    
<!--Можно добавить свои состояния. Они будут применяться в зависимости от поведения метода слушателя Entry-->
                    <VisualState x:Name="Valid">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="LightGreen" />
                        </VisualState.Setters>
                    </VisualState>

                    <VisualState x:Name="Invalid">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="Red" />
                        </VisualState.Setters>
                    </VisualState>
                    
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Entry>

    </VerticalStackLayout>
</ContentPage>